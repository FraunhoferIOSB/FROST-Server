{{- if .Values.frost.db.enableIntegratedDb -}}
{{- $tier := "db" -}}
{{- $fullName := include "frost-server.fullName" (merge (dict "tier" $tier) .) -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    helm.sh/chart: {{ include "frost-server.chart" . }}
    app: {{ include "frost-server.name" . }}
    component: {{ $tier }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/managed-by: {{ .Release.Service }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app: {{ include "frost-server.name" . }}
      component: {{ $tier }}
  template:
    metadata:
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        helm.sh/chart: {{ include "frost-server.chart" . }}
        app: {{ include "frost-server.name" . }}
        component: {{ $tier }}
    spec:
      {{- if .Values.frost.db.requiredHostname }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - {{ .Values.frost.db.requiredHostname }}
      tolerations:
        - effect: NoSchedule
          key: workload-type/db
          operator: Exists
      {{- end }}
      securityContext:
          {{- toYaml .Values.frost.db.securityContext | nindent 10 }}
      {{- if .Values.frost.db.image.imagePullSecret }}
      imagePullSecrets:
        - name: {{ .Values.frost.db.image.imagePullSecret }}
      {{- end}}
      containers:
        - name: {{ $fullName }}
          image: "{{ .Values.frost.db.image.registry }}/{{ .Values.frost.db.image.repository }}:{{ .Values.frost.db.image.tag }}"
          imagePullPolicy: {{ .Values.frost.db.image.pullPolicy | quote }}
          ports:
            - name: postgresql
              containerPort: 5432
          {{- if or (.Values.frost.db.persistence.enabled) (.Values.frost.db.persistence.hostPath) }}
          volumeMounts:
            - name: {{ $fullName }}
              mountPath: {{ .Values.frost.db.persistence.mountPath }}
          {{- end }}
          env:
            - name: POSTGRES_DB
              value: {{ .Values.frost.db.database }}
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "frost-server.db.secret" . }}
                  key: {{ .Values.frost.db.secretUsernameKey }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "frost-server.db.secret" . }}
                  key: {{ .Values.frost.db.secretPasswordKey }}
      {{- if .Values.frost.db.persistence.enabled }}
      volumes:
        - name: {{ $fullName }}
          persistentVolumeClaim:
            claimName: {{ default $fullName .Values.frost.db.persistence.existingClaim }}
      {{- else if .Values.frost.db.persistence.hostPath }}
      volumes:
        - name: {{ $fullName }}
          hostPath:
            path: {{ .Values.frost.db.persistence.hostPath }}
            type: ""
      {{- end -}}
      {{- end -}}
